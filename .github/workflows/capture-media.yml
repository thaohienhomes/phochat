name: Capture AI Chat V2 Media

on:
  workflow_dispatch:
    inputs:
      preview_url:
        description: "Vercel preview URL (e.g., https://your-preview.vercel.app)"
        required: false
        default: "https://pho-chat-git-feature-ai-d63aa6-thaohienhomes-gmailcoms-projects.vercel.app"
  push:
    branches:
      - feature/ai-chat-v2-phase3-demo

permissions:
  contents: write

jobs:
  capture:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./pho-chat
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'pho-chat/package.json'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers (Chromium + WebKit)
        run: |
          npm i -D @playwright/test
          npx playwright install --with-deps chromium webkit

      - name: Determine PREVIEW_URL
        id: set_preview
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ inputs.preview_url }}" ]; then
            echo "preview=${{ inputs.preview_url }}" >> $GITHUB_OUTPUT
          else
            echo "preview=https://pho-chat-git-feature-ai-d63aa6-thaohienhomes-gmailcoms-projects.vercel.app" >> $GITHUB_OUTPUT
          fi
          echo "Using PREVIEW_URL=$(cat $GITHUB_OUTPUT | cut -d= -f2)"

      - name: Verify preview URL is reachable
        env:
          PREVIEW_URL: ${{ steps.set_preview.outputs.preview }}
        run: |
          echo "Checking $PREVIEW_URL"
          for i in 1 2 3; do
            if curl -sSf -o /dev/null "$PREVIEW_URL"; then
              echo "Preview reachable"; break;
            fi
            echo "Attempt $i failed; retrying in 5s..."; sleep 5;
          done

      - name: Run capture tests (desktop + mobile)
        env:
          PREVIEW_URL: ${{ steps.set_preview.outputs.preview }}
        run: npm run capture --silent

      - name: Export media to docs
        run: node scripts/capture/export-media.mjs

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ai-chat-v2-media
          path: pho-chat/docs/ai-chat-v2/*

      - name: Commit media to branch
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add docs/ai-chat-v2
          if ! git diff --cached --quiet; then
            git commit -m "chore(docs): add captured media (auto)"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No media changes to commit"
          fi

